(dp1
S'output'
p2
S"<type 'exceptions.SyntaxError'> define_table argument is not a Field or Table: %(rol)s"
p3
sS'layer'
p4
S'/home/adolfo/Desktop/PROYECTO ULAB/applications/SIGULAB/models/tablas_base.py'
p5
sS'code'
p6
S'### we prepend t_ to tablenames and f_ to fieldnames for disambiguity\n\nif db(db.auth_group).isempty():\n    db.auth_group.insert(role=\'WebMaster\',description=\'Super Usuario\')\n    db.auth_group.insert(role=\'Director\',description=\'Director de la Unidad de Laboratorio\')\n    db.auth_group.insert(role=\'Administrador Personal\',description=\'Administrador de Personal\')\n    db.auth_group.insert(role=\'Gestor de Sustancias\',description=\'Gestor de Sustancias\')\n    db.auth_group.insert(role=\'Jefe de Laboratorio\',description=\'Jefe de Laboratorio\')\n    db.auth_group.insert(role=\'Jefe de Secci\xc3\xb3n\',description=\'Jefe de Secci\xc3\xb3n\')\n    db.auth_group.insert(role=\'T\xc3\xa9cnico\',description=\'T\xc3\xa9cnico de Laboratorio\')\n    db.auth_group.insert(role=\'Usuario Normal\',description=\'Usuario recien registrado\')\n\nif db(db.auth_permission).isempty():\n    db.auth_permission.insert(name=\'director\',table_name=\'t_sustancias\',\n                            group_id=(db(db.auth_group.role == "Director").select(db.auth_group.id).first()))\n    db.auth_permission.insert(name=\'gestor\',table_name=\'t_sustancias\',\n                            group_id=db(db.auth_group.role == "Gestor de Sustancias").select(db.auth_group.id).first())\n    db.auth_permission.insert(name=\'tecnico\',table_name=\'t_inventario\',\n                            group_id=db(db.auth_group.role == "T\xc3\xa9cnico").select(db.auth_group.id).first())\n    db.auth_permission.insert(name=\'jefeseccion\',table_name=\'t_inventario\',\n                            group_id=db(db.auth_group.role == "Jefe de Secci\xc3\xb3n").select(db.auth_group.id).first())\n    db.auth_permission.insert(name=\'jefelab\',table_name=\'t_inventario\',\n                            group_id=db(db.auth_group.role == "Jefe de Laboratorio").select(db.auth_group.id).first())\n\nif db(db.auth_user).isempty():\n        db.auth_user.insert(first_name=\'Super\',last_name=\'Usuario\',email=\'webmaster@sigulab.com\',password=db.auth_user.password.validate(\'0000\')[0])\n        db.auth_membership.insert(user_id=(db(db.auth_user.email == \'webmaster@sigulab.com\').select(db.auth_user.id).first()),\\\n            group_id=db(db.auth_group.role == "WebMaster").select(db.auth_group.id).first());\n\ndb.auth_membership._plural = \'Membres\xc3\xadas\'\ndb.auth_membership._singular = \'Membres\xc3\xada\'\n\ndb.auth_group._plural = \'Privilegios\'\ndb.auth_group._singular = \'Privilegio\'\n\ndb.auth_user._plural = \'Usuarios Registrados\'\ndb.auth_user._singular = \'Usuario Registrado\'\n\ndb.define_table(\'t_users_autorizados\',\n    Field(\'f_email\', \'string\', label=T(\'Email\')),\n    Field(\'f_group\', \'string\', label=T(\'Privilegio\'), requires=IS_IN_DB(db, db.auth_group.id), represent = lambda value,row: str(db(db.auth_group.id == value).select(db.auth_group.role))[17:]), \'%(rol)s\')\n\ndb.t_users_autorizados._plural = \'Usuarios Autorizados\'\ndb.t_users_autorizados._singular = \'Usuario Autorizado\'\n########################################\ndb.define_table(\'t_regimenes\',\n    Field(\'f_nombre\',\'string\',label=T(\'Nombre\')),\n    format = \'%(f_nombre)s\')\n\nif db(db.t_regimenes).isempty():\n    db.t_regimenes.insert(f_nombre=\'RL4\')\n    db.t_regimenes.insert(f_nombre=\'RL7\')\n    db.t_regimenes.insert(f_nombre=\'RL4 y RL7\')\n    db.t_regimenes.insert(f_nombre=\'N/A\')\n##########################################\ndb.define_table(\'t_ingresos\',\n    Field(\'f_nombre\',label=T(\'Nombre\')),\n    format=\'%(f_nombre)s\'\n)\nif db(db.t_ingresos).isempty():\n    db.t_ingresos.insert(f_nombre=\'Suministro de Almac\xc3\xa9n\')\n    db.t_ingresos.insert(f_nombre=\'Compra a Proveedor\')\n    db.t_ingresos.insert(f_nombre=\'Pr\xc3\xa9stamo\')\n    db.t_ingresos.insert(f_nombre=\'Donaci\xc3\xb3n\')\n##########################################\ndb.define_table(\'t_consumos\',\n    Field(\'f_nombre\',label=T(\'Nombre\')),\n    format=\'%(f_nombre)s\'\n)\nif db(db.t_consumos).isempty():\n    db.t_consumos.insert(f_nombre=\'Pr\xc3\xa1ctica de Laboratorio\')\n    db.t_consumos.insert(f_nombre=\'Tesis\')\n    db.t_consumos.insert(f_nombre=\'Proyecto de Investigaci\xc3\xb3n\')\n    db.t_consumos.insert(f_nombre=\'Servicio de Laboratorio\')\n#    Field(\'f_permiso\',\'string\',label=T(\'Permiso\')),\n#    format=\'%(f_nombreCar)s\',\n#    migrate=settings.migrate)\n\n#db.define_table(\'t_cargo_archive\',db.t_cargo,Field(\'current_record\',\'reference t_cargo\',readable=False,writable=False))\n########################################\n\n\ndb.define_table(\'t_materiales\',\n               Field(\'f_nombre\',\'string\',requires=IS_NOT_EMPTY()),\n               Field(\'f_cas\',\'string\',requires=IS_NOT_EMPTY()),\n               format=\'%(f_nombre)s\')\ndb.t_materiales.f_cas.requires=IS_NOT_IN_DB(db,db.t_materiales.f_cas)\ndb.t_materiales.f_nombre.requires=IS_NOT_IN_DB(db,db.t_materiales.f_nombre)\n\n########################################\ndb.define_table(\'t_estado\',\n               Field(\'f_estado\',\'string\',readable=False,writable=False),\n               format=\'%(f_estado)s\')\n\nif db(db.t_estado).isempty():\n    db.t_estado.insert(f_estado=\'S\xc3\xb3lido\')\n    db.t_estado.insert(f_estado=\'L\xc3\xadquido\')\n    db.t_estado.insert(f_estado=\'Gaseoso\')\n\n########################################\n\ndb.define_table(\'t_sustancias\',\n    Field(\'f_nombre\', \'string\', label=T(\'Nombre\')),\n    Field(\'f_cas\', \'string\', label=T(\'Cas\')),\n    Field(\'f_pureza\', \'integer\',requires=IS_INT_IN_RANGE(0, 101), label=T(\'Pureza\')),\n    Field(\'f_estado\', \'integer\', requires=IS_IN_DB(db,db.t_estado.id,\'%(f_estado)s\'), label=T(\'Estado\'),\n    represent = lambda value,row: str(db(db.t_estado.id == value).select(db.t_estado.f_estado))[18:] ),\n    Field(\'f_control\', \'integer\', label=T(\'Control\'), requires=IS_IN_DB(db,db.t_regimenes.id,\'%(f_nombre)s\'),\n    represent = lambda value,row: str(db(db.t_regimenes.id == value).select(db.t_regimenes.f_nombre))[21:] ),\n    Field(\'f_peligrosidad\', \'string\', label=T(\'Peligrosidad\')),\n    format=\'%(f_nombre)s\',\n    migrate=settings.migrate)\ndb.t_sustancias.id.readable=False\ndb.t_sustancias.id.writable=False\ndb.define_table(\'t_sustancias_archive\',db.t_sustancias,Field(\'current_record\',\'reference t_sustancias\',readable=False,writable=False))\n\n\n\n\n##########################################\ndb.define_table(\'t_laboratorio\',\n    Field(\'f_nombre\', \'string\', notnull=True, label=T(\'Nombre\')),\n    Field(\'f_jefe\',\'integer\', requires=IS_IN_DB(db,db.auth_user.id,\'%(first_name)s %(last_name)s\'), label=T(\'Jefe de Laboratorio\')),\n    format=\'%(f_nombre)s\',\n    migrate=settings.migrate)\n\ndb.define_table(\'t_laboratorio_archive\',db.t_laboratorio,Field(\'current_record\',\'reference t_laboratorio\',readable=False,writable=False))\n\n########################################\ndb.define_table(\'t_seccion\',\n    Field(\'f_seccion\',\'string\',requires=IS_NOT_EMPTY(),label=T(\'Secci\xc3\xb3n\')),\n    Field(\'f_laboratorio\',\'string\',requires=IS_IN_DB(db,db.t_laboratorio.f_nombre,\'%(f_nombre)s\'), label=T(\'Laboratorio\')),\n    Field(\'f_jefe\',\'integer\', requires=IS_IN_DB(db,db.auth_user.id,\'%(first_name)s %(last_name)s\'), label=T(\'Jefe de Seccion\')),\n    format=\'%(f_nombre)s\'\n    )\n\n########################################\ndb.define_table(\'t_espaciofisico\',\n    Field(\'f_espacio\', \'string\', requires=IS_NOT_EMPTY(), label=T(\'Espacio\')),\n    Field(\'f_direccion\', \'string\', requires=IS_NOT_EMPTY(), label=T(\'Direccion\')),\n    Field(\'f_seccion\', \'integer\',requires=IS_IN_DB(db,db.t_seccion.id,\'%(f_laboratorio)s, seccion %(f_seccion)s\'), label=T(\'Seccion\')),\n    Field(\'f_tecnico\',\'integer\', requires=IS_IN_DB(db,db.auth_user.id,\'%(first_name)s %(last_name)s\'), label=T(\'Tecnico\')),\n    format=\'%(f_espacio)s\',\n    migrate=settings.migrate)\ndb.t_espaciofisico.id.represent= lambda value,row: str(row.f_espacio)[27:]\n\n########################################\ndb.define_table(\'t_inventario\',\n    Field(\'f_sustancia\', \'integer\', label=T(\'Sustancia\'),requires=IS_IN_DB(db,db.t_sustancias.id,\'%(f_nombre)s\')\\\n    ,represent= lambda name,row: \\\n                A(str(db(db.t_sustancias.id==name).select(db.t_sustancias.f_nombre))[22:],_href=URL(\'sustancias\',\'view_bitacora\',vars=dict(sust=row.f_sustancia,esp=row.f_espaciofisico)))),\n    Field(\'f_espaciofisico\', \'integer\',readable=False,writable=False ,requires=IS_IN_DB(db,db.t_espaciofisico.id,\'%(f_espacio)s\') ,\n    represent= lambda value,row: str(db(db.t_espaciofisico.id == value).select(db.t_espaciofisico.f_espacio))[27:],\n    label=T(\'Espaciofisico\')),\n    Field(\'f_cantidadonacion\', \'float\',default=0,label=T(\'Cantidad Donacion\'),requires=IS_FLOAT_IN_RANGE(0,1e1000)),\n    Field(\'f_cantidadusointerno\', \'float\',default=0,label=T(\'Cantidad Uso Interno\'),requires=IS_FLOAT_IN_RANGE(0,1e1000)),\n    Field(\'f_total\',\'float\',label=T(\'Cantidad Total\'),writable=False,compute=lambda r:r.f_cantidadonacion+r.f_cantidadusointerno,requires=IS_FLOAT_IN_RANGE(0,1e1000)),\n    Field(\'f_seccion\',\'integer\',readable=False,writable=False,requires=IS_IN_DB(db,db.t_seccion.id,\'%(f_seccion)s\'),label=T(\'Secci\xc3\xb3n\'),\n    compute = lambda r: long(str(db(db.t_espaciofisico.id == r.f_espaciofisico).select(db.t_espaciofisico.f_seccion))[26:]) ),\n    Field(\'f_laboratorio\',\'string\',requires=IS_IN_DB(db,db.t_laboratorio.id,\'%(f_nombre)s\'),readable=False,writable=False,\n    compute = lambda r: str( db((db.t_seccion.id == r.f_seccion)).select(db.t_seccion.f_laboratorio) )[25:-2] ),\n    format=\'%(f_sustancia)s\',\n    migrate=settings.migrate)\n\ndb.define_table(\'t_inventario_archive\',db.t_inventario,Field(\'current_record\',\'reference t_inventario\',readable=False,writable=False))\ndb.t_inventario.id.readable = False\n\n########################################\ndb.define_table(\'t_bitacora\',\n    Field(\'f_fechaingreso\',\'datetime\',label=T(\'Fecha\')),\n    Field(\'f_sustancia\', \'integer\',readable=False,writable=False,requires=IS_IN_DB(db,db.t_sustancias.id,\'%(f_nombre)s\'),\n            represent=lambda f_sustancia,row: str(db(db.t_sustancias.id == f_sustancia).select(db.t_sustancias.f_nombre))[22:],\n            notnull=True, label=T(\'Sustancia\')),\n    Field(\'f_proceso\', \'string\', notnull=True, label=T(\'Proceso\')),\n    Field(\'f_ingreso\', \'float\', default=0, label=T(\'Ingreso\'),requires=IS_FLOAT_IN_RANGE(0,1e1000)),\n    Field(\'f_consumo\', \'float\', default=0,label=T(\'Consumo\'),requires=IS_FLOAT_IN_RANGE(0,1e1000)),\n    Field(\'f_cantidad\', \'float\', label=T(\'Cantidad\'),requires=IS_FLOAT_IN_RANGE(0,1e1000),writable=False,default=0,compute=lambda r:\n    r.f_ingreso-r.f_consumo+float ( str ( db( (db.t_inventario.f_sustancia == r.f_sustancia) & (db.t_inventario.f_espaciofisico == r.f_espaciofisico) ).select(db.t_inventario.f_cantidadusointerno) )[33:]) ),\n    Field(\'f_fecha\', \'datetime\', label=T(\'FechaIngreso\'),writable=False,readable=False, default=request.now),\n    Field(\'f_espaciofisico\', \'integer\',readable=False, requires=IS_IN_DB(db,db.t_espaciofisico.id,\'%(f_espacio)s\') ,\n    writable=False, represent= lambda value,row: str(db(db.t_espaciofisico.id == value).select(db.t_espaciofisico.f_espacio))[26:],\n     label=T(\'Espacio Fisico\'),notnull=True),\n    Field(\'f_descripcion\',\'text\',label=T(\'Descripci\xc3\xb3n\'),readable=False),\n    format=\'%(f_sustancia)s\',\n    migrate=settings.migrate)\ndb.t_bitacora.id.readable = False\n\ndb.define_table(\'t_bitacora_archive\',db.t_bitacora,Field(\'current_record\',\'reference t_bitacora\',readable=False,writable=False))\n\n\n########################################\ndb.define_table(\'t_solicitud\',\n    Field(\'f_sustancia\', \'string\', label=T(\'Sustancia\')),\n    Field(\'f_espaciofisico\', \'string\', label=T(\'Espaciofisico\')),\n    Field(\'f_seccion\', \'string\', label=T(\'Seccion\')),\n    Field(\'f_responsable\', \'string\', label=T(\'Responsable\')),\n    Field(\'f_solicitador\', \'string\', label=T(\'Solicitador\')),\n    Field(\'f_cantidadsolicitada\', \'string\', label=T(\'Cantidadsolicitada\')),\n    Field(\'f_estado\', \'string\', label=T(\'Estado\')),\n    format=\'%(f_sustancia)s\',\n    migrate=settings.migrate)\n\ndb.define_table(\'t_solicitud_archive\',db.t_solicitud,Field(\'current_record\',\'reference t_solicitud\',readable=False,writable=False))\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/adolfo/Desktop/PROYECTO ULAB/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/adolfo/Desktop/PROYECTO ULAB/applications/SIGULAB/models/tablas_base.py", line 41, in <module>\n    Field(\'f_group\', \'string\', label=T(\'Privilegio\'), requires=IS_IN_DB(db, db.auth_group.id), represent = lambda value,row: str(db(db.auth_group.id == value).select(db.auth_group.role))[17:]), \'%(rol)s\')\n  File "/home/adolfo/Desktop/PROYECTO ULAB/gluon/packages/dal/pydal/base.py", line 834, in define_table\n    table = self.lazy_define_table(tablename,*fields,**args)\n  File "/home/adolfo/Desktop/PROYECTO ULAB/gluon/packages/dal/pydal/base.py", line 851, in lazy_define_table\n    table = table_class(self, tablename, *fields, **args)\n  File "/home/adolfo/Desktop/PROYECTO ULAB/gluon/packages/dal/pydal/objects.py", line 299, in __init__\n    field\nSyntaxError: define_table argument is not a Field or Table: %(rol)s\n'
p11
s.